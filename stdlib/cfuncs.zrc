#!/usr/lib/zrc/bin/zrc
# cfuncs.zrc
#
# This code is licensed under the BSD license (see LICENSE for details).
# This library adds common C-style aliases to functions

if {![string cmp $__CFUNCS_ZRC_INCLUDED {}]} {
set __CFUNCS_ZRC_INCLUDED = 1

##################
# Usage function #
##################
alias zrcusage { eval echo >(1=2) \
	usage: (`{basename $argv(0)}) }

####################
# String functions #
####################
alias str string
alias strran { string range }
alias strrep { string replace }
alias strcmp { string cmp }
alias strlen { string length }
alias strcat { string cat }
alias strind { string index }

###################
# Array functions #
###################
alias arr array
alias sizeof { array length }

#########
# Other #
#########
alias puts { echo }
alias fork { @ }
alias new  { malloc char } 

########################################
# "Allocate" memory to a string buffer #
#                                      #
# @param 2                             #
# @return string                       #
########################################
fn malloc {
	if {$argc != 3} {
		zrcusage "char|short|int|long|long long" <n>
		return 1
	} else {
		let {i j A,types res} {
			array setkey types = {
				{char}      1
				{short}     2
				{int}       4
				{long}      4
				{long long} 8
			}
			for {set i = 0} {$i < $argv(2)} {inc i} {
				for {set j = 0} {$j < $types($argv(1))} {inc j} {
					set res = "$res "
				}
			}
			return $res
		}
	}
}

#########################
# Compare two chars     #
#                       #
# @param 2              #
# @return -1, 0, 1, {}  #
#########################
fn chrcmp {
	if {$argc != 3} {
		zrcusage <c1> <c2>
		return {}
	} else {
		expr {[ord $argv(1)] <=> [ord $argv(2)]}
	}
}

}
