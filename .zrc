#!/usr/bin/env zrc
echo 'Welcome to Zrc!'
echo 'The time is: `{date}'
set E:SHELL = 'zrc'
#echo "Disk usage:";
#df -h;
# Prompt variables
set HOSTNAME =`{hostname}
set USER     =`{whoami}
set RBOLD =`{/bin/echo -ne {\e[1;31m}}
set GREEN =`{/bin/echo -ne {\e[0;32m}}
set RESET =`{/bin/echo -ne {\e[0m}}

#Other vars
set ZRC = /usr/lib/zrc

fn __git_ps1 {
	git tag >(2=) > /dev/null
	if {$? == 0} {
		echo -n '('
		git branch | grep {^*} | colrm 1 2 | tr -d '\n'
		echo -n ')'
	}
}

fn __status_ps1 {
	if {[string length $status] && [string cmp $status "0"]} {
		echo -n [string cat $RBOLD "($status)" $RESET]
	}
}

fn prompt_cmd {
	set status = $?
	set PWD = `{pwd | sed 's|^$E:HOME|~|'};
	title "(zrc) $PWD" > /dev/tty
	return {}
}

fn title {
	/bin/echo -ne {\e]0;}
	echo -n $argv(1) \a
}

set PS1 = {[string cat [prompt_cmd]$GREEN $USER $RESET\@$HOSTNAME]\
           [string cat $GREEN $PWD]\
           [string cat \
		$RESET \
		`{__git_ps1} \
		`{__status_ps1}% '\ '];return $status}
# Aliases
alias l       "ls -hF --color"
alias lt      "ls -altrhF --color"
alias la      "ls -all"
alias l.      "eval ls -d .*"
alias c       "clear"
alias mkd     "mkdir -pv"
alias rmd     "rmdir -pv"
alias j       "jobs"
alias p       "ps -l"
alias du      "du -k"
alias ..      "cd .."
alias ...     "cd ../.."
alias ....    "cd ../../.."
alias .....   "cd ../../../.."
alias sha1    "openssl sha1"
alias ports   "netstat -tulanp"
alias net     "\$E:AUTH systemctl restart NetworkManager"
alias mkdir   "mkdir -pv"
alias pacman  "\$E:AUTH pacman"
alias calc    "bc -ql"
alias emacs   "emacs -nw"
alias history "eval \$E:PAGER < ~/.zrc_history"
alias da      "date '+%Y-%m-%d %A %T %Z'"

# Modify original cmds
alias cp      "cp -i"
alias mv      "mv -i"
alias rm      "rm -iv"
alias mkdir   "mkdir -pv"
alias rmdir   "rmdir -pv"
alias ps      "ps auxf"
alias ping    "ping -c 5"

# Chmod alias
alias mx      "chmod a+x"
alias 000     "chmod 000"
alias 644     "chmod 644"
alias 666     "chmod 666"
alias 755     "chmod 755"
alias 777     "chmod 777"

alias str string
alias strcmp 'string cmp'
alias strcat 'string cat'
alias strlen 'string length'
alias sizeof 'array length'

alias arr array

fn mkcd { mkdir $argv(1) && cd $argv(1); }
fn lcd  { cd $argv(1) && l }

# Rot13 is a very common cipher for some reason
fn rot13 {
	if {$argc == 1} {
		tr '\[a-m]\[n-z]\[A-M]\[N-Z]' '\[n-z]\[a-m]\[N-Z]\[A-M]'
	} else {
		for {set i = 1} {$i < $argc} {inc i} {
			echo $argv($i)
		} | rot13
	}
}

# Go up N Times
fn up { 
	for {set i = 0} {$i < $argv(1)} {inc i} ..
}

# Extract an archive
# (because it's hard to memorize tar commands)
fn extract {
	if [test -f $argv(1)] {
		echo '$argv(1): file not found!' >(1=2)
		return 1
	} else {
		let s {
			set s = $argv(1)
			switch $s {
				reg {.\.tar.bz2$} { tar xjf    $s }
				reg {.\.tar.gz$}  { tar xzf    $s }
				reg {.\.bz2$}     { bunzip2    $s }
				reg {.\.rar$}     { unrar e    $s }
				reg {.\.gz$}      { gunzip     $s }
				reg {.\.tar$}     { tar xf     $s }
				reg {.\.tbz2$}    { tar xjf    $s }
				reg {.\.tgz$}     { tar xzf    $s }
				reg {.\.zip$}     { unzip      $s }
				reg {.\.Z$}       { uncompress $s }
				reg {.\.7z$}      { 7z x       $s }
				default {
					echo '$s could not be extracted!' >(1=2)
					return 1
				}
			}
		}
	}
}

# Function from Xmodulo
fn kernelgraph {
	lsmod | perl -e {
		print "digraph \"lsmod\" {";
		<>;
		while(<>){
			@_=split/\s+/;
			print "\"$_[0]\" -> \"$_\"\n" for split/,/,$_[3]
		}
		print "}"
	} | dot -Tpng | display -;
}

# Custom tools
# https://github.com/Edd12321/{cstop,evct,zrc}
alias top+ 'cstop;reset'
alias vi+  'evct'

set E:PATH = /usr/lib/zrc/corebuf/bin:$E:PATH
set E:MANPATH = /usr/lib/zrc/doc:$E:MANPATH

# Default programs
set E:AUTH     = "doas"
set E:EDITOR   = "emacs"
set E:VISUAL   = "emacs"
set E:TERMINAL = "xfce4-terminal"
set E:MANPAGER = "most"
set E:AS       = "fasm"
set E:CXX      = "g++"
set E:CC       = "gcc"
set E:BROWSER  = "firefox"
if {[string cmp $E:TERM "linux"]} {
	set E:TERM = "xterm-256color"
}
